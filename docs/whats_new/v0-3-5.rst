v0.3.5 - Someversion (Somemonth, Someday, Someyear)
+++++++++++++++++++++++++++++++++++++++++++++++++++

New Features
############

- Add a method :code:`get_plotting_data` to each component to export the input
  data required by FluProDia in order to generate the data required to display
  state changes in the components in a fluid property diagram. Each component
  returns a nested dictionary containing the respective data. E.g. the return
  value of a :code:`valve`:

  .. code-block:: bash

      {1: {
          'isoline_property': 'h',
          'isoline_value': 773.8970004397456,
          'isoline_value_end': 773.8970004397456,
          'starting_point_property': 'p',
          'starting_point_value': 51.164150405253665,
          'ending_point_property': 'p',
          'ending_point_value': 6.831002318100345
     }}

  The diagrams could look like this:

  .. figure:: api/_images/logph_diagram_states.svg
      :align: center

      Figure: logph diagram of NH3 with a simple heat pump cycle.

  .. figure:: api/_images/Ts_diagram_states.svg
      :align: center

      Figure: Ts diagram of NH3 with a simple heat pump cycle.

  For more information see the respective
  :ref:`documentation section <FluProDia_label>`
  (`PR #234 <https://github.com/oemof/tespy/pull/234>`_).

Documentation
#############
- Fix several broken links and typos
  (`PR #236 <https://github.com/oemof/tespy/pull/236>`_).

Bug Fixes
#########
- Fix a bug, where checking if parameters are numeric in the :code:`set_attr()`
  methods of classes connection, bus and component failed in case special numpy
  number types were passed
  (`#daa1ecb <https://github.com/oemof/tespy/commit/daa1ecb>`_,
  `#b420396 <https://github.com/oemof/tespy/commit/b420396>`_).

Other Changes
#############
.. list-table:: Adjust value limits for some component parameters
   :widths: 25 25 50
   :header-rows: 1

   * - component
     - parameter
     - new value
   * - heat_exchanger_simple
     - :code:`zeta.max_val`
     - 1e15
   * -
     - :code:`ks.max_val` (for Hazen-Williams equation)
     - 200
   * - valve
     - :code:`zeta.max_val`
     - 1e15

- On some machines the coloring of the results printout does not work and
  displaces the table in an ugly way. To avoid this, the coloring is changed to
  optional (`PR #229 <https://github.com/oemof/tespy/pull/229>`_). Use the
  following line for non-colored printouts:

  .. code-block:: python

      mynetwork.print_results(colored=False)

- An error message is raised in case the user specifies a fluid vector
  containing fluids, that are not part of the network's fluid list
  (`PR #233 <https://github.com/oemof/tespy/pull/233>`_).

- Add a :code:`__repr__` methods for connections and components for fast access
  to all numerical connection and component parameters via :code:`print()`.

  .. code-block:: python

      # [...]
      chp = combustion_engine('my combustion engine')
      chp_fg = connection(...)
      # [...]
      print(chp)
      print(chp_fg)

  The printout could look something like this:

  .. code-block:: bash

      Component: my combustion engine
      [class]    combustion_engine
      [data]     lamb: 1.000e+00
                 ti: 2.530e+04
                 P: 1.000e+04
                 Q1: 4.980e+03
                 Q2: 3.740e+03
                 Qloss: 2.150e+03
                 pr1: 9.900e-01
                 pr2: 9.900e-01
                 zeta1: 1.456e+03
                 zeta2: 1.447e+03

  .. code-block:: bash

       Connection: my combustion engine:out3_flue gas outlet:in1
       [fluid]     Ar: 1.219e-02
                   CH4: 0.000e+00
                   CO2: 1.508e-01
                   H2O: 1.231e-01
                   N2: 7.139e-01
                   O2: 0.000e+00
       [data]      m: 9.228e-03 kg / s
                   p: 5.000e+00 bar
                   h: 1.106e+06 J / kg
                   T: 4.501e+02 C
                   x: 0.000e+00 -
                   v: 4.004e-03 m3 / s
                   vol: 4.339e-01 m3 / kg
                   s: 7.233e+03 J / kgK
                   Td_bp: nan C

Contributors
############
- Francesco Witte (`@fwitte <https://github.com/fwitte>`_)
- `@jbueck <https://github.com/jbueck>`_
- Markus Brandt (`@MarBrandt <https://github.com/MarBrandt>`_)
